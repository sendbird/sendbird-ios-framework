//
//  SBDUserMessage.h
//  SendBirdSDK
//
//  Created by Jed Gyeong on 5/23/16.
//  Copyright Â© 2016 SENDBIRD.COM. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "SBDBaseMessage.h"
#import "SBDBaseChannel.h"
#import "SBDUserMessageParams.h"

NS_ASSUME_NONNULL_BEGIN

@class SBDCommand;
@class SBDBaseChannel;
@class SBDPoll, SBDPollUpdateEvent, SBDPollVoteEvent;

/// The `SBDUserMessage` class represents the user <span>message</span> which is generated by a user
/// via [`sendUserMessage:completionHandler:`](../Classes/SBDBaseChannel.html#//api/name/sendUserMessage:completionHandler:) or
/// [`sendUserMessage:data:completionHandler:`](../Classes/SBDBaseChannel.html#//api/name/sendUserMessage:data:completionHandler:)
/// in `SBDBaseChannel` or [Platform API](https://docs.sendbird.com/platform#messages_3_send).
@interface SBDUserMessage : SBDBaseMessage <NSCopying>

/// Poll that is linked to this message
/// @since 3.0.232
@property (strong, readonly) SBDPoll *poll;

/// Translated <span>message</span> text.
@property (strong, nonatomic, readonly, nullable) NSDictionary *translations;

/// Represents the dispatch state of the message.
/// If message is not dispatched completely to the Sendbird server, the value is `SBDMessageRequestStatePending`.
/// If failed to send the message, the value is `SBDMessageRequestStateFailed`.
/// And if success to send the message, the value is `SBDMessageRequestStateSucceeded`.
///
/// @since 3.0.141
/// @deprecated 3.0.173. (Use `sendingStatus` instead.)
@property (assign, nonatomic, readonly, getter=getRequestState) SBDMessageRequestState requestState DEPRECATED_ATTRIBUTE;


/// Applies updated poll data to this message object. This method is designed to be called when
/// [`didUpdatePoll:`](../Protocols/SBDChannelDelegate.html#//api/name/didUpdatePoll:)
/// event returns the poll object
/// @return boolean if event is successfuly applied
/// @since 3.0.232
- (BOOL)applyPollUpdateEvent:(nonnull SBDPollUpdateEvent *)poll;

/// Applies updated poll data to this message object. This method is designed to be called when
/// [`didVotePoll:`](../Protocols/SBDChannelDelegate.html#//api/name/didVotePoll:)
/// event returns the vote event object
/// @return boolean if event is successfuly applied all
/// @since 3.0.232
- (BOOL)applyPollVoteEvent:(nonnull SBDPollVoteEvent *)event;

/// @since 3.1.0
- (nullable SBDUserMessageParams *)getUserMessageParams;

@end

NS_ASSUME_NONNULL_END
